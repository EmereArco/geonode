language: python

python:
  - "2.7"

virtualenv:
  system_site_packages: true

addons:
  apt:
    packages:
      - uuid-dev

branches:
  only:
    - afg_risks_contrib

install:
  - sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
  - sudo apt-get install wget ca-certificates
  - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
  - sudo sh -c 'echo "deb http://ppa.launchpad.net/ubuntugis/ppa/ubuntu $(lsb_release -cs) main" | sudo tee -a /etc/apt/sources.list'
  - sudo sh -c 'echo "deb-src http://ppa.launchpad.net/ubuntugis/ppa/ubuntu $(lsb_release -cs) main" | sudo tee -a /etc/apt/sources.list'
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 314DF160
  - sudo add-apt-repository -y ppa:webupd8team/java
  - sudo apt-get -qq -m -y --force-yes update
  - sudo apt-get -qq -m -y --force-yes remove postgresql* mysql*
  - sudo apt-get -qq -m -y --force-yes -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew upgrade
  - sudo apt-get install -q -y libmapserver1 python-mapscript libgdal1h python-gdal
  - sudo apt-get install -q -y postgresql-server-dev-9.3 postgresql-9.3-postgis-2.1 libgdal1
  - sudo service postgresql restart
  - sudo apt-get install -y --force-yes python-virtualenv python-imaging python-lxml python-pyproj python-shapely python-nose python-httplib2 python-httplib2 gettext
  - sudo apt-get install -y --force-yes oracle-java8-installer ant maven2 libjai-imageio-core-java --no-install-recommends
  - sudo update-java-alternatives --set java-8-oracle
  - pip install -r requirements.txt --use-mirrors
  - pip install -e . --use-mirrors --no-deps
  - pip install psycopg2
  - pip install coveralls

services:
  - postgresql

before_script:
  - psql -c "CREATE USER geonode WITH PASSWORD 'geonode';" -U postgres
  - psql -c "CREATE DATABASE geonode WITH OWNER geonode;" -U postgres
  - psql -c "CREATE DATABASE geonode_data WITH OWNER geonode;" -U postgres
  - psql -c "CREATE EXTENSION postgis;" -d geonode_data -U postgres
  - psql -c "GRANT ALL ON geometry_columns TO PUBLIC;" -d geonode_data -U postgres
  - psql -c "GRANT ALL ON spatial_ref_sys TO PUBLIC;" -d geonode_data -U postgres
  - mv geonode/local_settings.py.psql_test geonode/local_settings.py
  - paver setup

script:
  - python manage.py test geonode.contrib.risks.tests.smoke

after_script:
  - paver reset_hard

after_success:
  - coveralls

notifications:
  email:
    - alessio.fabiani@gmail.com
